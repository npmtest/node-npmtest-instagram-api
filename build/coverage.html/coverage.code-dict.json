{"/home/travis/build/npmtest/node-npmtest-instagram-api/test.js":"/* istanbul instrument in package npmtest_instagram_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-instagram-api/lib.npmtest_instagram_api.js":"/* istanbul instrument in package npmtest_instagram_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_instagram_api = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_instagram_api = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-instagram-api/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-instagram-api && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_instagram_api */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_instagram_api\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_instagram_api.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_instagram_api.rollup.js'] =\n            local.assetsDict['/assets.npmtest_instagram_api.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_instagram_api.__dirname + '/lib.npmtest_instagram_api.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-instagram-api/node_modules/instagram-api/lib/instagram.js":"// Copyright Guilherme Farias. and other Contributors\n//\n// Permission is hereby granted, free of charge, to any person\n// obtaining a copy of this software and associated documentation\n// files (the \"Software\"), to deal in the Software without\n// restriction, including without limitation the rights to use,\n// copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the\n// Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n// WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n// OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = function(accessToken) {\n\tvar q = require('q');\n\tvar https = require('https');\n\tvar query = require('querystring');\n\tvar host = 'api.instagram.com';\n\tvar port = 443;\n\n\tfunction call(method, path, params, callback) {\n\t\tvar req;\n\t\tvar data = null;\n\t\tvar options;\n\n\t\tif (!params) {\n\t\t\tparams = {};\n\t\t}\n\n\t\tparams.access_token = accessToken;\n\n\t\toptions = {\n\t\t\thost: host,\n\t\t\tport: port,\n\t\t\tmethod: method,\n\t\t\tpath: '/v1' + path + (method === 'GET' || method === 'DELETE' ? '?' + query.stringify(params) : ''),\n\t\t\theaders: {}\n\t\t};\n\n\t\tif (method !== 'GET' && method !== 'DELETE') {\n\t\t\tdata = query.stringify(params);\n\t\t\toptions.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t\t\toptions.headers['Content-Length'] = data.length;\n\t\t}\n\n\t\treq = https.request(options, function(res) {\n\t\t\tvar body = '';\n\n\t\t\tres.setEncoding('utf8');\n\n\t\t\tres.on('data', function(chunk) {\n\t\t\t\tbody += chunk;\n\t\t\t});\n\n\t\t\tres.on('end', function() {\n\t\t\t\tvar result;\n\t\t\t\tvar limit = parseInt(res.headers['x-ratelimit-limit'], 10) || 0;\n\t\t\t\tvar remaining = parseInt(res.headers['x-ratelimit-remaining'], 10) || 0;\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.parse(body);\n\t\t\t\t} catch (err) {\n\t\t\t\t\terr.details = body;\n\t\t\t\t\tcallback(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcallback(null, result, remaining, limit);\n\t\t\t});\n\t\t});\n\n\t\treq.on('error', function(err) {\n\t\t\treturn callback(err);\n\t\t});\n\n\t\tif (data !== null) {\n\t\t\treq.write(data);\n\t\t}\n\n\t\treq.end();\n\t};\n\n\tfunction requestHandler(deferred) {\n\t\treturn function(err, result, remaining, limit) {\n\t\t\tif (err) {\n\t\t\t\tdeferred.reject(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (result && result.meta && result.meta.code === 200) {\n\t\t\t\treturn deferred.resolve({\n\t\t\t\t\tdata: result.data,\n\t\t\t\t\tpagination: result.pagination,\n\t\t\t\t\tlimit: limit,\n\t\t\t\t\tremaining: remaining\n\t\t\t\t});\n\t\t\t} else if (result && result.meta) {\n\t\t\t\tdeferred.reject(result.meta);\n\t\t\t} else {\n\t\t\t\tdeferred.reject(result);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction userSelf() {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/users/self', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction user(userId) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/users/' + userId, params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction userSelfMedia(options) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {\n\t\t\tcount: 50\n\t\t};\n\n\t\tif(options && options.count){\n\t\t\tparams.count = options.count;\n\t\t}\n\n\t\tif(options && options.min_id){\n\t\t\tparams.min_id = options.min_id;\n\t\t}\n\n\t\tif(options && options.max_id){\n\t\t\tparams.max_id = options.max_id;\n\t\t}\n\n\t\tcall('GET', '/users/self/media/recent/', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction userMedia(userId, options) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {\n\t\t\tcount: 50\n\t\t};\n\n\t\tif(options && options.count){\n\t\t\tparams.count = options.count;\n\t\t}\n\n\t\tif(options && options.min_id){\n\t\t\tparams.min_id = options.min_id;\n\t\t}\n\n\t\tif(options && options.max_id){\n\t\t\tparams.max_id = options.max_id;\n\t\t}\n\n\t\tcall('GET', '/users/' + userId + '/media/recent/', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction userSelfMediaLiked(options) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {\n\t\t\tcount: 50\n\t\t};\n\n\t\tif(options && options.count){\n\t\t\tparams.count = options.count;\n\t\t}\n\n\t\tif(options && options.max_like_id){\n\t\t\tparams.max_like_id = options.max_like_id;\n\t\t}\n\n\t\tcall('GET', '/users/self/media/liked/', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction userSearch(term, options) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {\n\t\t\tq: term,\n\t\t\tcount: 50\n\t\t};\n\n\t\tif(options && options.count){\n\t\t\tparams.count = options.count;\n\t\t}\n\n\t\tcall('GET', '/users/search', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction userSelfFollows(options) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tif(options && options.cursor){\n\t\t\tparams.cursor = options.cursor;\n\t\t}\n\n\t\tcall('GET', '/users/self/follows/', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction userSelfFollowedBy(options) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tif(options && options.cursor){\n\t\t\tparams.cursor = options.cursor;\n\t\t}\n\n\t\tcall('GET', '/users/self/followed-by/', params, requestHandler(deferred));\n\t\treturn deferred.promise;\n\t};\n\n\tfunction userSelfRequestedBy() {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/users/self/requested-by/', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction userRelationship(userId) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/users/' + userId + '/relationship', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction setUserRelationship(userId, action) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {\n\t\t\taction: action\n\t\t};\n\n\t\tcall('POST', '/users/' + userId + '/relationship', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction media(mediaId) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/media/' + mediaId, params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction mediaByShortcode(shortcode) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/media/shortcode/' + shortcode, params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction mediaSearch(options) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {\n\t\t\tlat: options.lat,\n\t\t\tlng: options.lng,\n\t\t\tdistance: options.distance\n\t\t};\n\n\t\tcall('GET', '/media/search', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction mediaComments(mediaId) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/media/' + mediaId + '/comments', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction postMediaComment(mediaId, text) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {\n\t\t\ttext: text\n\t\t};\n\n\t\tcall('POST', '/media/' + mediaId + '/comments', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction removeMediaComment(mediaId, commentId) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('DELETE', '/media/' + mediaId + '/comments/' + commentId, params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction mediaLikes(mediaId) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/media/' + mediaId + '/likes', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction postMediaLike(mediaId) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('POST', '/media/' + mediaId + '/likes', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction removeMediaLike(mediaId) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('DELETE', '/media/' + mediaId + '/likes', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction getTag(tagName) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/tags/' + tagName, params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction getMediasByTag(tagName, options) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {\n\t\t\tcount: 50\n\t\t};\n\n\t\tif(options && options.count){\n\t\t\tparams.count = options.count;\n\t\t}\n\n\t\tif(options && options.min_tag_id){\n\t\t\tparams.min_tag_id = options.min_tag_id;\n\t\t}\n\n\t\tif(options && options.max_tag_id){\n\t\t\tparams.max_tag_id = options.max_tag_id;\n\t\t}\n\n\t\tcall('GET', '/tags/' + tagName + '/media/recent', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction searchTags(tagName) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {\n\t\t\tq: tagName\n\t\t};\n\n\t\tcall('GET', '/tags/search', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction getLocation(locationId) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tcall('GET', '/locations/' + locationId, params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction getMediasByLocation(locationId, options) {\n\t\tvar deferred = q.defer();\n\n\t\tvar params = {};\n\n\t\tif(options && options.min_id){\n\t\t\tparams.min_id = options.min_id;\n\t\t}\n\n\t\tif(options && options.max_id){\n\t\t\tparams.max_id = options.max_id;\n\t\t}\n\n\t\tcall('GET', '/locations/' + locationId + '/media/recent', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\tfunction searchLocations(options) {\n\t\tvar deferred = q.defer();\n\t\tvar params = {};\n\n\t\tif(options && options.lat){\n\t\t\tparams.lat = options.lat;\n\t\t}\n\n\t\tif(options && options.lng){\n\t\t\tparams.lng = options.lng;\n\t\t}\n\n\t\tif(options && options.distance){\n\t\t\tparams.distance = options.distance;\n\t\t}\n\n\t\tif(options && options.facebook_places_id){\n\t\t\tparams.facebook_places_id = options.facebook_places_id;\n\t\t}\n\n\t\tcall('GET', '/locations/search', params, requestHandler(deferred));\n\n\t\treturn deferred.promise;\n\t};\n\n\treturn {\n\t\tuserSelf: userSelf,\n\t\tuser: user,\n\t\tuserSelfMedia: userSelfMedia,\n\t\tuserMedia: userMedia,\n\t\tuserSelfMediaLiked: userSelfMediaLiked,\n\t\tuserSearch: userSearch,\n\t\tuserSelfFollows: userSelfFollows,\n\t\tuserSelfFollowedBy: userSelfFollowedBy,\n\t\tuserSelfRequestedBy: userSelfRequestedBy,\n\t\tuserRelationship: userRelationship,\n\t\tsetUserRelationship: setUserRelationship,\n\t\tmedia: media,\n\t\tmediaByShortcode: mediaByShortcode,\n\t\tmediaSearch: mediaSearch,\n\t\tmediaComments: mediaComments,\n\t\tpostMediaComment: postMediaComment,\n\t\tremoveMediaComment: removeMediaComment,\n\t\tmediaLikes: mediaLikes,\n\t\tpostMediaLike: postMediaLike,\n\t\tremoveMediaLike: removeMediaLike,\n\t\tgetTag: getTag,\n\t\tgetMediasByTag: getMediasByTag,\n\t\tsearchTags: searchTags,\n\t\tgetLocation: getLocation,\n\t\tgetMediasByLocation: getMediasByLocation,\n\t\tsearchLocations: searchLocations\n\t};\n};\n"}